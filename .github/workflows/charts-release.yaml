name: "Charts: Release"

concurrency: helm-release

permissions:
  id-token: write
  statuses: write
  issues: read
  checks: write
  contents: write
  pull-requests: write
  actions: write

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - "charts/**"

jobs:

  release-scale:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.save-commit-hash.outputs.commit_hash }}
    steps:
      # Optional step if GPG signing is used
      - name: Prepare GPG key
        shell: bash
        run: |
          gpg_dir=.cr-gpg
          mkdir -p "$gpg_dir"
          keyring="$gpg_dir/secring.gpg"
          base64 -d <<< "$GPG_KEYRING_BASE64" > "$keyring"
          passphrase_file="$gpg_dir/passphrase"
          echo "$GPG_PASSPHRASE" > "$passphrase_file"
          echo "CR_PASSPHRASE_FILE=$passphrase_file" >> "$GITHUB_ENV"
          echo "CR_KEYRING=$keyring" >> "$GITHUB_ENV"
        env:
          GPG_KEYRING_BASE64: "${{ secrets.GPG_KEYRING_BASE64 }}"
          GPG_PASSPHRASE: "${{ secrets.GPG_PASSPHRASE }}"

      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
        with:
          token: ${{ secrets.BOT_TOKEN }}
          fetch-depth: 0


      - name: Add execute permissions to script
        run: chmod +x ./.github/scripts/prep_helm.sh

      - name: Prep Helm
        shell: bash
        run: |
          ./.github/scripts/prep_helm.sh

      - name: Setting repo parent dir as safe safe.directory
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Collect changes
        id: collect-changes
        uses: ./.github/actions/collect-changes

      - name: Generate Changelog
        shell: bash
        if: |
          steps.collect-changes.outputs.changesDetectedAfterTag == 'true'
        run: |
          export GOBIN=/usr/local/bin/
          go install github.com/git-chglog/git-chglog/cmd/git-chglog@latest
          CHARTS=(${{ steps.collect-changes.outputs.modifiedChartsAfterTag }})
          parthreads=$(($(nproc) * 2))
          parallel -j ${parthreads} .github/scripts/changelog.sh '2>&1' ::: ${CHARTS[@]}

      - name: Fix Pre-Commit issues
        shell: bash
        if: |
          steps.collect-changes.outputs.changesDetectedAfterTag == 'true'
        run: |
          echo "Running pre-commit test-and-cleanup..."
          pre-commit run --all ||:
          # Fix sh files to always be executable
          find . -name '*.sh' | xargs chmod +x

   #   - name: Checkout
    #    uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
     #   if: |
      #    steps.collect-changes.outputs.changesDetectedAfterTag == 'true'
       # with:
        #  fetch-depth: 1
         # repository: truecharts/website
          #token: ${{ secrets.BOT_TOKEN }}
         # path: website

  #    - name: Copy docs to website
   #     if: |
    #      steps.collect-changes.outputs.changesDetectedAfterTag == 'true'
    #    shell: bash
    #    run: |
    #      #!/bin/bash
    #     CHARTS=(${{ steps.collect-changes.outputs.modifiedChartsAfterTag }})
    #      echo "Maing sure directories exist..."
    #      mkdir -p website/public/img/hotlink-ok/chart-icons || echo "chart-icons path already exists, continuing..."
    #      mkdir -p website/public/img/hotlink-ok/chart-icons-small || echo "chart-icons-small path already exists, continuing..."
    #      mkdir -p website/src/assets || echo "assets path already exists, continuing..."

    #      ./charttool genchartlist ./charts
    #      mv charts.json website/src/assets/charts.json
    #      export DEBUG=false
    #      export STRICT=true
    #      go-yq --version

     #     for i in "${CHARTS[@]}"
     #     do
     #       ./.github/scripts/chart-docs.sh "$i"
     #     done

     # - name: Commit Website Changes
     #   if: |
     #     steps.collect-changes.outputs.changesDetected == 'true'
     #   run: |
     #     cd website
     #     git config user.name "TrueNasChartBot"
     #     git config user.email "truenaschartbot@bytehaven.live"
      #    git add --all
      #    git commit -sm "Commit released docs for TrueCharts" || exit 0
      #    git push

      - name: Checkout Catalog
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29 # v4
        if: |
          steps.collect-changes.outputs.changesDetectedAfterTag == 'true'
        with:
          fetch-depth: 1
          repository: KnightRider2070/truenas-catalog
          token: ${{ secrets.BOT_TOKEN }}
          ref: staging
          path: catalog

      - name: build catalog
        shell: bash
        if: |
          steps.collect-changes.outputs.changesDetectedAfterTag == 'true'
        run: |
          CHARTS=(${{ steps.collect-changes.outputs.modifiedChartsAfterTag }})
          ./charttool deps
          ./charttool buildSCALE

      - name: Commit Catalog
        if: |
          steps.collect-changes.outputs.changesDetected == 'true'
        run: |
          cd catalog
          git config user.name "TrueNasChartBot"
          git config user.email "truenaschartbot@bytehaven.live"
          git add --all
          git commit -sm "Commit new Chart releases for TrueCharts" || exit 0
          git push
          cd -
